package com.aistudio.lifehackstudio.ui.screens.cardCompanyScreenimport androidx.compose.foundation.layout.*import androidx.compose.foundation.lazy.LazyColumnimport androidx.compose.material.Buttonimport androidx.compose.material.Textimport androidx.compose.runtime.Composableimport androidx.compose.runtime.LaunchedEffectimport androidx.compose.runtime.collectAsStateimport androidx.compose.runtime.getValueimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.unit.dpimport androidx.navigation.NavControllerimport com.aistudio.lifehackstudio.domain.cardCompanyRepository.CardCompanyimport com.aistudio.lifehackstudio.ui.screens.componentsScreen.DetailCardCompanyimport com.aistudio.lifehackstudio.ui.screens.componentsScreen.FullScreenLoaderComponentimport org.koin.androidx.compose.koinViewModel@Composablefun CardCompanyScreen(    modifier: Modifier,    id: String,    viewModel: CardCompanyViewModel = koinViewModel(),    navController: NavController,) {    val state by viewModel.cardCompany.collectAsState()    when (state.firstOrNull()?.isLoading) {        true -> FullScreenLoaderComponent(modifier = modifier)        false -> LazyColumn(modifier = modifier) {            state.forEach { card ->                if (card.id != null) {                    item {                        DetailCardCompany(                            modifier = modifier,                            cardDetail = card,                            onClickBack = { navController.popBackStack() })                    }                }            }        }        else -> {}    }    LaunchedEffect(key1 = Unit, block = {        viewModel.loadCompanyCard(id = id.toInt())    })}