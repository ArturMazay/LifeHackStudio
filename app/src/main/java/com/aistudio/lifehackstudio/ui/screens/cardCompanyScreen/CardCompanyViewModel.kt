package com.aistudio.lifehackstudio.ui.screens.cardCompanyScreenimport androidx.lifecycle.ViewModelimport androidx.lifecycle.viewModelScopeimport com.aistudio.lifehackstudio.domain.cardCompanyRepository.CardCompanyimport com.aistudio.lifehackstudio.domain.cardCompanyRepository.CardCompanyRepositoryimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.flow.MutableStateFlowimport kotlinx.coroutines.flow.StateFlowimport kotlinx.coroutines.launchclass CardCompanyViewModel(private val companyCardCompanyRepository: CardCompanyRepository) :    ViewModel() {    private val _companiesCard = MutableStateFlow<List<CardCompany>>(emptyList())    val cardCompany: StateFlow<List<CardCompany>> get() = _companiesCard    fun loadCompanyCard(id: Int) {        _companiesCard.value = listOf(CardCompany(isLoading = true))        viewModelScope.launch(Dispatchers.IO) {            try {                val companyCard =                    companyCardCompanyRepository.getCardCompanyNetworkDataSource(id = id)                _companiesCard.value = companyCard            } catch (e: Exception) {                _companiesCard.value = listOf(CardCompany(error = e))            }        }    }}