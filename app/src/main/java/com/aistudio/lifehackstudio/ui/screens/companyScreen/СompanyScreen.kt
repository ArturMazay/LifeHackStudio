package com.aistudio.lifehackstudio.ui.screens.companyScreenimport androidx.compose.foundation.clickableimport androidx.compose.foundation.layout.*import androidx.compose.foundation.lazy.LazyColumnimport androidx.compose.runtime.Composableimport androidx.compose.runtime.LaunchedEffectimport androidx.compose.runtime.collectAsStateimport androidx.compose.runtime.getValueimport androidx.compose.ui.Modifierimport androidx.compose.ui.unit.dpimport androidx.navigation.NavControllerimport com.aistudio.lifehackstudio.domain.cardCompanyRepository.CardCompanyimport com.aistudio.lifehackstudio.ui.screens.componentsScreen.CardCompanyimport com.aistudio.lifehackstudio.ui.screens.componentsScreen.FullScreenLoaderComponentimport com.aistudio.lifehackstudio.ui.screens.helpers.AppIntentimport org.koin.androidx.compose.koinViewModel@Composablefun Ð¡ompanyScreen(    modifier: Modifier,    navController: NavController,    viewModel: CompanyViewModel = koinViewModel(),) {    val state by viewModel.companies.collectAsState()    when (state.firstOrNull()?.isLoading) {        true -> FullScreenLoaderComponent(modifier = modifier)        false -> LazyColumn(modifier = modifier.padding(bottom = 45.dp)) {            state.forEach { company ->                item {                    CardCompany(                        modifier = modifier                            .clickable {                                navController.navigate(route = "cardCompanyScreen/${company.id}")                            },                        cardCompany = company                    )                }            }        }        else -> {}    }    LaunchedEffect(key1 = Unit, block = {        viewModel.getIntent(intent = AppIntent.Loading)    })}