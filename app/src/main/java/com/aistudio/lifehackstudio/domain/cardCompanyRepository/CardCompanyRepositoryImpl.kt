package com.aistudio.lifehackstudio.domain.cardCompanyRepositoryimport com.aistudio.lifehackstudio.data.networkDataSource.ResultWrapperimport com.aistudio.lifehackstudio.data.networkDataSource.cardCompanyNetworkDataSource.CardCompanyDataSourceimport com.aistudio.lifehackstudio.data.networkDataSource.cardCompanyNetworkDataSource.ResponseCardCompanyclass CardCompanyRepositoryImpl(private val cardCompanyDataSource: CardCompanyDataSource) :    CardCompanyRepository {    override suspend fun getCardCompanyNetworkDataSource(id: Int): List<CardCompany> =        when (val result = cardCompanyDataSource.getCardCompany(id = id)) {            is ResultWrapper.Success -> {                result.value.map(::mapResponseCardCompanyToDomainCardCompany)            }            is ResultWrapper.Error -> listOf(CardCompany(error = result.error))        }    private fun mapResponseCardCompanyToDomainCardCompany(responseCardCompany: ResponseCardCompany): CardCompany {        return with(responseCardCompany) {            CardCompany(                id = id,                name = name,                img = img,                phone = phone,                www = www,                description = description,                lat = lat,                lon = lon            )        }    }}