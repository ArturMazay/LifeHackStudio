package com.aistudio.lifehackstudio.domain.companyRepositoryimport com.aistudio.lifehackstudio.data.networkDataSource.ResultWrapperimport com.aistudio.lifehackstudio.data.networkDataSource.companyNetworkDataSource.CompanyDataSourceimport com.aistudio.lifehackstudio.data.networkDataSource.companyNetworkDataSource.ResponseCompanyclass CompanyRepositoryImpl(    private val companyDataSource: CompanyDataSource,) : CompanyRepository {    override suspend fun getCompanyNetworkDataSource(): List<Company> =        when (val result = companyDataSource.getCompanyList()) {            is ResultWrapper.Success -> {                result.value.map(::mapResponseCompanyToDomainCompany)                }            is ResultWrapper.Error -> listOf(Company(error = result.error))        }    private fun mapResponseCompanyToDomainCompany(responseCompany: ResponseCompany): Company =        with(responseCompany) {            Company(id = id, name = name, image = image)        }}